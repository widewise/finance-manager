name: .NET

on:
  push:
    branches: [ "main" ]
    #TODO: create src, common, tests folders 
    paths:
     - "FinanceManager.Account/**"
     - "FinanceManager.Account.Tests/**"
     - "FinanceManager.Events/**"
     - "FinanceManager.Testing/**"
     - "FinanceManager.TransportLibrary/**"
     - "FinanceManager.UnitOfWork/**"
     - "FinanceManager.Web/**" 
  pull_request:
    branches: [ "main" ]
    paths:
      - "FinanceManager.Account/**"
      - "FinanceManager.Account.Tests/**"
      - "FinanceManager.Events/**"
      - "FinanceManager.Testing/**"
      - "FinanceManager.TransportLibrary/**"
      - "FinanceManager.UnitOfWork/**"
      - "FinanceManager.Web/**"

env:
  project-file: "./FinanceManager.Account/FinanceManager.Account.csproj"
  test-project-file: "./FinanceManager.Account.Tests/FinanceManager.Account.Tests.csproj"

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Install SonarScanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Run SonarQube Begin Analysis
      run: dotnet sonarscanner begin /k:"FinanceManager" /d:sonar.host.url="http://localhost:9000" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Restore dependencies
      run: dotnet restore ${{ env.project-file }}

    - name: Build
      run: dotnet build --no-restore ${{ env.project-file }}

    - name: Test
      run: dotnet test ${{ env.test-project-file }}

    - name: Run SonarQube End Analysis
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"